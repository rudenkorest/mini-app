// Google Analytics utility –¥–ª—è Telegram Mini App

// Measurement ID –∑ environment variables
const GA_MEASUREMENT_ID = import.meta.env.VITE_GA_MEASUREMENT_ID;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Analytics
export const initAnalytics = () => {
  if (!GA_MEASUREMENT_ID) {
    console.warn('GA_MEASUREMENT_ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ environment variables');
    return;
  }

  // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram
  const telegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user;
  
  if (window.gtag) {
    // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ Telegram –¥–∞–Ω–∏–º–∏
    window.gtag('config', GA_MEASUREMENT_ID, {
      custom_map: {
        'telegram_user_id': telegramUser?.id || 'anonymous',
        'telegram_username': telegramUser?.username || 'unknown',
        'telegram_language': telegramUser?.language_code || 'uk',
        'is_premium': telegramUser?.is_premium || false,
        'platform': window.Telegram?.WebApp?.platform || 'unknown'
      }
    });

    console.log('üìä Google Analytics —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è Telegram Mini App');
  } else {
    console.warn('‚ö†Ô∏è gtag –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —â–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è');
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤ —Å—Ç–æ—Ä—ñ–Ω–æ–∫
export const trackPageView = (pageName) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'page_view', {
      page_title: pageName,
      page_location: window.location.href,
      custom_parameter_1: 'telegram_mini_app'
    });
    console.log(`üìÑ Page view: ${pageName}`);
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∑–∞—î–º–æ–¥—ñ–π –∑ –∫–∞—Ä—Ç–æ—é
export const trackMapInteraction = (action, details = {}) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'map_interaction', {
      event_category: 'Map',
      event_label: action,
      custom_parameter_1: JSON.stringify(details)
    });
    console.log(`üó∫Ô∏è Map interaction: ${action}`, details);
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∫–ª—ñ–∫—ñ–≤ –Ω–∞ –º–∞—Ä–∫–µ—Ä–∏
export const trackMarkerClick = (locationId, locationTitle) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'marker_click', {
      event_category: 'Location',
      event_label: locationTitle,
      location_id: locationId
    });
    console.log(`üìç Marker click: ${locationTitle} (ID: ${locationId})`);
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
export const trackSubscriptionCheck = (isSubscribed) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'subscription_check', {
      event_category: 'Engagement',
      event_label: isSubscribed ? 'subscribed' : 'not_subscribed',
      is_subscribed: isSubscribed
    });
    console.log(`üì∫ Subscription check: ${isSubscribed ? 'subscribed' : 'not_subscribed'}`);
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
export const trackError = (errorType, errorMessage) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'exception', {
      description: `${errorType}: ${errorMessage}`,
      fatal: false
    });
    console.log(`‚ùå Error tracked: ${errorType} - ${errorMessage}`);
  }
};

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
export const trackSessionDuration = (duration) => {
  if (window.gtag && GA_MEASUREMENT_ID) {
    window.gtag('event', 'session_duration', {
      event_category: 'Engagement',
      event_label: 'time_on_page',
      value: Math.round(duration / 1000) // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    });
    console.log(`‚è±Ô∏è Session duration: ${Math.round(duration / 1000)}s`);
  }
}; 