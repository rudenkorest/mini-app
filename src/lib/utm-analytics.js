// UTM Analytics –¥–ª—è Telegram Mini App
import { retrieveLaunchParams } from '@telegram-apps/sdk-react';

// GA4 Measurement ID
const GA_MEASUREMENT_ID = 'G-8V3LE3FJ5W';

// –§–ª–∞–≥ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
let isAnalyticsInitialized = false;

/**
 * –ü–∞—Ä—Å–∏—Ç—å UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑ start_param –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É startapp=utm_source-instagram
 * @param {string} startParam - start_param –∑ Telegram WebApp
 * @returns {Object} - –æ–±'—î–∫—Ç –∑ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
 */
export const parseUTMParams = (startParam) => {
  if (!startParam) {
    return {};
  }

  try {
    console.log('üîç –û—Ç—Ä–∏–º–∞–Ω–æ start_param:', startParam);
    
    let utmParams = {};
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ startParam –º—ñ—Å—Ç–∏—Ç—å UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    if (startParam.includes('utm_')) {
      // –†–æ–∑–±–∏–≤–∞—î–º–æ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ –∑–∞ –¥–µ—Ñ—ñ—Å–æ–º –∞–±–æ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è–º
      const parts = startParam.split(/[-_]/);
      
      // –®—É–∫–∞—î–º–æ UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
      for (let i = 0; i < parts.length - 1; i++) {
        const part = parts[i];
        const nextPart = parts[i + 1];
        
        if (part.startsWith('utm')) {
          const utmKey = part;
          const utmValue = nextPart;
          
          if (utmValue && !utmValue.startsWith('utm')) {
            utmParams[utmKey] = utmValue;
            i++; // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É —á–∞—Å—Ç–∏–Ω—É, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∞ –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–∞
          }
        }
      }
    }
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î location (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "kyiv")
    // Location –∑–∞–∑–≤–∏—á–∞–π –Ω–µ –º—ñ—Å—Ç–∏—Ç—å "utm_" –ø—Ä–µ—Ñ—ñ–∫—Å
    const locationParts = startParam.split(/[-_]/).filter(part => 
      !part.startsWith('utm') && part.length > 0
    );
    
    if (locationParts.length > 0) {
      // –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à—É —á–∞—Å—Ç–∏–Ω—É, —è–∫–∞ –Ω–µ —î UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
      const location = locationParts[0];
      if (location && location !== startParam) {
        utmParams.location = location;
      }
    }

    console.log('üîç UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–Ω–∞–π–¥–µ–Ω–æ:', utmParams);
    return utmParams;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', error);
    return {};
  }
};

/**
 * –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥—É –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤
 * @param {string} startParam - start_param –∑ Telegram WebApp
 * @returns {Object} - –æ–±'—î–∫—Ç –∑ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 */
export const parseUTMParamsAdvanced = (startParam) => {
  if (!startParam) {
    return {};
  }

  try {
    console.log(' –†–æ–∑—à–∏—Ä–µ–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥ start_param:', startParam);
    
    let utmParams = {};
    
    // –ú–µ—Ç–æ–¥ 1: –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ –¥–µ—Ñ—ñ—Å–∏ (utm_source-instagram)
    if (startParam.includes('utm_') && startParam.includes('-')) {
      const utmRegex = /utm_(\w+)-([^-]+)/g;
      let match;
      
      while ((match = utmRegex.exec(startParam)) !== null) {
        const [, utmKey, utmValue] = match;
        utmParams[`utm_${utmKey}`] = utmValue;
      }
    }
    
    // –ú–µ—Ç–æ–¥ 2: –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è (utm_source_instagram)
    if (startParam.includes('utm_') && startParam.includes('_')) {
      const utmRegex = /utm_(\w+)_([^_]+)/g;
      let match;
      
      while ((match = utmRegex.exec(startParam)) !== null) {
        const [, utmKey, utmValue] = match;
        utmParams[`utm_${utmKey}`] = utmValue;
      }
    }
    
    // –ú–µ—Ç–æ–¥ 3: –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ URLSearchParams (utm_source=instagram&utm_campaign=launch)
    if (startParam.includes('=') && startParam.includes('&')) {
      const urlParams = new URLSearchParams(startParam);
      
      const utmKeys = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'];
      utmKeys.forEach(key => {
        const value = urlParams.get(key);
        if (value) {
          utmParams[key] = value;
        }
      });
    }
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ location (—á–∞—Å—Ç–∏–Ω–∞ –±–µ–∑ UTM –ø—Ä–µ—Ñ—ñ–∫—Å—ñ–≤)
    const locationMatch = startParam.match(/^([^-_]+)/);
    if (locationMatch && !locationMatch[1].startsWith('utm')) {
      utmParams.location = locationMatch[1];
    }

    console.log('üîç –†–æ–∑—à–∏—Ä–µ–Ω—ñ UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–Ω–∞–π–¥–µ–Ω–æ:', utmParams);
    return utmParams;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', error);
    return {};
  }
};

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î Google Analytics 4 –∑ UTM-–¥–∞–Ω–∏–º–∏
 * @param {Object} utmParams - UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 */
export const initGA4WithUTM = (utmParams = {}) => {
  if (isAnalyticsInitialized) {
    console.log('üìä GA4 –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    return;
  }

  if (!window.gtag) {
    console.warn('‚ö†Ô∏è gtag –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —â–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è');
    return;
  }

  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram
    const telegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user;
    const platform = window.Telegram?.WebApp?.platform || 'unknown';
    
    // –ë–∞–∑–æ–≤–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è GA4
    const config = {
      custom_map: {
        'telegram_user_id': telegramUser?.id || 'anonymous',
        'telegram_username': telegramUser?.username || 'unknown',
        'telegram_language': telegramUser?.language_code || 'uk',
        'is_premium': telegramUser?.is_premium || false,
        'platform': platform,
        'mini_app_version': '1.0.0',
        'bot_username': 'GulyaiMapBot'
      }
    };

    // –î–æ–¥–∞—î–º–æ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    if (Object.keys(utmParams).length > 0) {
      config.custom_map = {
        ...config.custom_map,
        ...utmParams
      };
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ GA4
    window.gtag('config', GA_MEASUREMENT_ID, config);
    
    isAnalyticsInitialized = true;
    console.log(' Google Analytics 4 —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∑ UTM-–¥–∞–Ω–∏–º–∏');
    
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é utm_tracking
    if (Object.keys(utmParams).length > 0) {
      trackUTMEvent(utmParams);
    }
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó GA4:', error);
  }
};

/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–¥—ñ—é utm_tracking –∑ UTM-–¥–∞–Ω–∏–º–∏
 * @param {Object} utmParams - UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 */
export const trackUTMEvent = (utmParams) => {
  if (!window.gtag || !isAnalyticsInitialized) {
    console.warn('‚ö†Ô∏è GA4 –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    return;
  }

  try {
    const eventData = {
      event_category: 'Traffic',
      event_label: 'utm_tracking',
      custom_parameter_1: JSON.stringify(utmParams),
      ...utmParams
    };

    window.gtag('event', 'utm_tracking', eventData);
    console.log(' UTM tracking event –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:', eventData);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ UTM event:', error);
  }
};

/**
 * –û—Å–Ω–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó UTM Analytics
 */
export const initUTMAnalytics = () => {
  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ launch params –∑ Telegram SDK
    const launchParams = retrieveLaunchParams();
    const startParam = launchParams.startParam;
    
    console.log(' Launch params –æ—Ç—Ä–∏–º–∞–Ω–æ:', launchParams);
    console.log('üîó Start param:', startParam);
    
    // –ü–∞—Ä—Å–∏–º–æ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ (—Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–π –º–µ—Ç–æ–¥)
    let utmParams = parseUTMParamsAdvanced(startParam);
    
    // –Ø–∫—â–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–π –º–µ—Ç–æ–¥ –Ω–µ –∑–Ω–∞–π—à–æ–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –ø—Ä–æ–±—É—î–º–æ –±–∞–∑–æ–≤–∏–π
    if (Object.keys(utmParams).length === 0) {
      utmParams = parseUTMParams(startParam);
    }
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ GA4 –∑ UTM-–¥–∞–Ω–∏–º–∏
    initGA4WithUTM(utmParams);
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ UTM-–¥–∞–Ω—ñ –≤ localStorage –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
    if (Object.keys(utmParams).length > 0) {
      localStorage.setItem('telegram_utm_params', JSON.stringify(utmParams));
      console.log('üíæ UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ localStorage');
    }
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó UTM Analytics:', error);
  }
};

/**
 * –û—Ç—Ä–∏–º—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑ localStorage
 * @returns {Object} - –∑–±–µ—Ä–µ–∂–µ–Ω—ñ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 */
export const getStoredUTMParams = () => {
  try {
    const stored = localStorage.getItem('telegram_utm_params');
    return stored ? JSON.parse(stored) : {};
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', error);
    return {};
  }
};

/**
 * –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π –∑ UTM-–∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
 * @param {string} eventName - –Ω–∞–∑–≤–∞ –ø–æ–¥—ñ—ó
 * @param {Object} eventData - –¥–∞–Ω—ñ –ø–æ–¥—ñ—ó
 */
export const trackEventWithUTM = (eventName, eventData = {}) => {
  if (!window.gtag || !isAnalyticsInitialized) {
    console.warn('‚ö†Ô∏è GA4 –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    return;
  }

  try {
    const utmParams = getStoredUTMParams();
    
    const enhancedEventData = {
      ...eventData,
      ...utmParams,
      custom_parameter_1: JSON.stringify(utmParams)
    };

    window.gtag('event', eventName, enhancedEventData);
    console.log(` Event "${eventName}" –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∑ UTM-–∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º:`, enhancedEventData);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ event –∑ UTM:', error);
  }
};

/**
 * –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–ø—É—Å–∫—É –¥–æ–¥–∞—Ç–∫—É –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–º location
 * @param {string} location - –ª–æ–∫–∞—Ü—ñ—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "kyiv")
 */
export const trackAppLaunch = (location = null) => {
  if (!window.gtag || !isAnalyticsInitialized) {
    console.warn('‚ö†Ô∏è GA4 –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    return;
  }

  try {
    const utmParams = getStoredUTMParams();
    
    const eventData = {
      event_category: 'App',
      event_label: 'app_launch',
      location: location || utmParams.location || 'unknown',
      bot_username: 'GulyaiMapBot',
      ...utmParams
    };

    window.gtag('event', 'app_launch', eventData);
    console.log('üöÄ App launch event –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:', eventData);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ app launch event:', error);
  }
}; 